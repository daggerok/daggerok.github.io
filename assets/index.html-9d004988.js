import{_ as h,r as u,o as b,c as f,d as n,a,w as e,e as s,b as d,f as p}from"./app-82404351.js";const y="/assets/home-page-light-theme-48d1b91b.png",w="/assets/home-page-dark-theme-83116159.png",_="/assets/home-page-light-theme-with-circle-logo-73186bbe.png",x="/assets/home-page-dark-theme-with-circle-logo-5fed5055.png",q="/assets/home-page-light-theme-with-title-1f911c17.png",j="/assets/home-page-dark-theme-with-title-9923bb55.png",C="/assets/home-page-light-theme-with-home-page-navbar-link-ce9dc2af.png",P="/assets/home-page-dark-theme-with-home-page-navbar-link-b5720e15.png",I="/assets/home-page-light-theme-with-github-navbar-link-a0627d5e.png",N="/assets/home-page-dark-theme-with-github-navbar-link-8bae0202.png",S="/assets/home-page-light-theme-with-navbar-search-f11868e8.png",z="/assets/home-page-dark-theme-with-navbar-search-9d096834.png",E="/assets/pages-build-and-deployment-using-github-actions-2d9589db.png",L={mounted:async function(){const r=(await document.querySelector("html")).classList.contains("dark");if(console.log("isDark",r),!r){document.querySelectorAll(".code-group__nav").forEach(l=>{l.style.backgroundColor="#6a8bad"});return}(await Promise.all(document.querySelectorAll("button.code-group__nav-tab"))).filter(l=>l.textContent==="dark theme").filter(l=>l.getAttribute("aria-pressed")!==!0).filter(l=>l.getAttribute("aria-expanded")!==!0).forEach(l=>l.click()),console.log("clicked.")}},F=n("h1",{id:"vuepress-2-x-getting-started",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vuepress-2-x-getting-started","aria-hidden":"true"},"#"),s(" VuePress 2.x Getting Started")],-1),D=n("p",null,"In this guide we will be looking into VuePress 2.x which currently is in beta but very promising. We will build simple customized blog with home page only. Using this skeleton can be just enough for many people who would like to quickly get something easy to use, working, fast and very nice looking...",-1),H={class:"table-of-contents"},T=n("h2",{id:"install-nodejs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install-nodejs","aria-hidden":"true"},"#"),s(" Install NodeJS")],-1),A={href:"https://nodejs.org/uk/download/",target:"_blank",rel:"noopener noreferrer"},U=n("p",null,"I personally always prefer use command line:",-1),V=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("brew reinstall "),n("span",{class:"token function"},"node"),s(`
`)])])],-1),G=n("div",{class:"language-batch","data-ext":"batch"},[n("pre",{class:"language-batch"},[n("code",null,[n("span",{class:"token command"},[n("span",{class:"token keyword"},"scoop"),s(" install nodejs")]),s(`
`)])])],-1),B={class:"custom-container tip"},J=n("p",{class:"custom-container-title"},"TIP",-1),O={href:"https://nodejs.org/uk/download/package-manager/",target:"_blank",rel:"noopener noreferrer"},M=n("h2",{id:"initialize-project",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#initialize-project","aria-hidden":"true"},"#"),s(" Initialize project")],-1),R=n("p",null,[s("Create (for example: "),n("code",null,"customized-vuepress-2-blog"),s(") project folder and initialize NodeJS project in it:")],-1),$=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"mkdir"),s(" ~/customized-vuepress-2-blog "),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token builtin class-name"},"cd"),s(),n("span",{class:"token variable"},"$_"),s(`
`),n("span",{class:"token function"},"npm"),s(" init "),n("span",{class:"token parameter variable"},"-y"),s(`
`)])])],-1),W=n("div",{class:"language-batch","data-ext":"batch"},[n("pre",{class:"language-batch"},[n("code",null,[n("span",{class:"token command"},[n("span",{class:"token keyword"},"mkdir"),s(),n("span",{class:"token variable"},"%USERPROFILE%"),s("\\customized-vuepress"),n("span",{class:"token number"},"-2"),s("-blog")]),s(`
`),n("span",{class:"token command"},[n("span",{class:"token keyword"},"cd"),s(),n("span",{class:"token variable"},"%USERPROFILE%"),s("\\customized-vuepress"),n("span",{class:"token number"},"-2"),s("-blog")]),s(`
`),n("span",{class:"token command"},[n("span",{class:"token keyword"},"npm"),s(" init "),n("span",{class:"token parameter attr-name"},"-y")]),s(`
`)])])],-1),K=p(`<h2 id="install-minimal-require-software" tabindex="-1"><a class="header-anchor" href="#install-minimal-require-software" aria-hidden="true">#</a> Install minimal require software</h2><p>Let&#39;s install vuepress 2.x as our main blog engine, rimraf to clean files and folders, cross-env and NodeJS types (see <code>package.json</code> file):</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-ED</span> vuepress@next
<span class="token function">npm</span> i <span class="token parameter variable">-ED</span> cross-env rimraf @types/npm
</code></pre></div>`,3),Q=p(`<h2 id="git-ignore-configuration" tabindex="-1"><a class="header-anchor" href="#git-ignore-configuration" aria-hidden="true">#</a> Git ignore configuration</h2><p>Let&#39;s ignore IntelliJ IDEA NodeJS modules and VuePress temporal, cache and output folders and files in <code>.gitginore</code> file:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;/.idea/&quot;</span>            <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&quot;/.vuepress/.cache/&quot;</span> <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&quot;/.vuepress/.temp/&quot;</span>  <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&quot;/.vuepress/dist/&quot;</span>   <span class="token operator">&gt;&gt;</span> .gitignore
<span class="token builtin class-name">echo</span> <span class="token string">&quot;/node_modules/&quot;</span>     <span class="token operator">&gt;&gt;</span> .gitignore
</code></pre></div><h2 id="add-npm-scripts" tabindex="-1"><a class="header-anchor" href="#add-npm-scripts" aria-hidden="true">#</a> Add NPM scripts</h2><p>Update <code>package.json</code> file with next npm-scripts:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev .&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build .&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="static-resources" tabindex="-1"><a class="header-anchor" href="#static-resources" aria-hidden="true">#</a> Static resources</h2><p>Our site should looks unique, so we will require to add our photos, pictures or favicon logos... If you want to refer on some picture or any other resource by static path you should place that resource in <code>.vuepress/public</code> folder. For example I have 2 files I&#39;m referring on: <code>favicon.ico</code> and <code>me-2020-11.jpeg</code> in that folder:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>.vuepress/public
├── favicon.ico
└── me-2020-11.jpeg
</code></pre></div><h2 id="site-content" tabindex="-1"><a class="header-anchor" href="#site-content" aria-hidden="true">#</a> Site content</h2>`,10),X={href:"https://www.markdownguide.org/basic-syntax/",target:"_blank",rel:"noopener noreferrer"},Y=n("code",null,".md",-1),Z=p(`<div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">home</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">heroImage</span><span class="token punctuation">:</span> me<span class="token punctuation">-</span>2020<span class="token punctuation">-</span>11.jpeg
<span class="token key atrule">heroText</span><span class="token punctuation">:</span> Maksim Kostromin
<span class="token key atrule">tagline</span><span class="token punctuation">:</span> My VuePress 2.x blog
<span class="token key atrule">features</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> easy to start
  <span class="token key atrule">details</span><span class="token punctuation">:</span> Minimal setup with markdown<span class="token punctuation">-</span>centered project structure helps you focus on writing.
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> extensible and flexible
  <span class="token key atrule">details</span><span class="token punctuation">:</span> Use Vue components in markdown<span class="token punctuation">,</span> and develop custom themes with well known Vue. Enjoy the developer experience of Vue + webpack
           or vite builders capabilities.
<span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> extremely fast<span class="token tag">!</span>
  <span class="token key atrule">details</span><span class="token punctuation">:</span> VuePress generates pre<span class="token punctuation">-</span>rendered static HTML for each page<span class="token punctuation">,</span> and runs as an SPA once a page is loaded.</span>
<span class="token punctuation">---</span></span>

<span class="token title important"><span class="token punctuation">#</span> Hello, World! [![GitHub Pages](https://github.com/daggerok/customized-vuepress-2-blog/actions/workflows/ci.yaml/badge.svg)](https://github.com/daggerok/customized-vuepress-2-blog/actions/workflows/ci.yaml)</span>

I&#39;m Maksim! I do software engineering, music, love and peace...

<span class="token url">[<span class="token content">This</span>](<span class="token url">https://github.com/daggerok</span>)</span> is my GitHub

To be continue...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),nn={href:"https://v2.vuepress.vuejs.org/reference/default-theme/frontmatter.html#home-page",target:"_blank",rel:"noopener noreferrer"},sn=p(`<h2 id="run-dev-server-to-test" tabindex="-1"><a class="header-anchor" href="#run-dev-server-to-test" aria-hidden="true">#</a> Run dev server to test</h2><p>Start developer server:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run dev
</code></pre></div>`,3),an={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},en=n("p",null,[n("img",{src:y,alt:"home page light theme"})],-1),tn=n("p",null,[n("img",{src:w,alt:"home page dark theme"})],-1),on=p(`<h2 id="custom-styling" tabindex="-1"><a class="header-anchor" href="#custom-styling" aria-hidden="true">#</a> Custom styling</h2><p>Currently, home page picture looking nice, but we would like to style it a bit. Let&#39;s change that picture from square to circle. To do so, we should add <code>.vuepress/styles/index.scss</code> with next context:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">main &gt; header &gt; img </span><span class="token punctuation">{</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),pn={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},ln=n("p",null,[n("img",{src:_,alt:"home page light theme with circle logo"})],-1),cn=n("p",null,[n("img",{src:x,alt:"home page dark theme with circle logo"})],-1),un=p(`<p>Now it looks better 😎</p><h2 id="customize-navbar" tabindex="-1"><a class="header-anchor" href="#customize-navbar" aria-hidden="true">#</a> Customize navbar</h2><p>One more think I wanted to mention is navbar configuration in VuePress. At the moment we don&#39;t have anything in our navbar except light / dark theme toggle, so let&#39;s configure it according to our needs...</p><h3 id="navbar-title" tabindex="-1"><a class="header-anchor" href="#navbar-title" aria-hidden="true">#</a> Navbar title</h3><p>Let&#39;s start from title... In my <code>package.json</code> file I have description:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Customized blog using VuePress 2.x&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>So I would like to use it as my blog title. To implement this I should create <code>.vuepress/config.ts</code> file and add necessary configuration:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// @ts-ignore // const { name, description } = require(\`\${process.cwd()}/package.json\`)</span>
<span class="token keyword">const</span> getPackageJsonFile <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> assert<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> description <span class="token punctuation">}</span> <span class="token operator">=</span> getPackageJsonFile<span class="token punctuation">.</span>default<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token operator">:</span> description<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let&#39;s back to browser:</p>`,9),rn=n("p",null,[n("img",{src:q,alt:"home page light theme with title"})],-1),dn=n("p",null,[n("img",{src:j,alt:"home page dark theme with title"})],-1),kn=p(`<h3 id="navbar-links" tabindex="-1"><a class="header-anchor" href="#navbar-links" aria-hidden="true">#</a> Navbar links</h3><p>With time, we will have many other pages, maybe we will add <em>About</em> page together with <em>Contacts</em> and so on...</p><h4 id="home-page-link" tabindex="-1"><a class="header-anchor" href="#home-page-link" aria-hidden="true">#</a> Home page link</h4><p>At this point of time I think it would be nice to start from link to main <em>Home</em> page, so any other links could be added latest similarly. Navbar bar links configuration also should be done in <code>.vuepress/config.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme<span class="token punctuation">,</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getPackageJsonFile <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> assert<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> description<span class="token operator">:</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> getPackageJsonFile<span class="token punctuation">.</span>default<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token punctuation">,</span>
    theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        navbar<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> link<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now let&#39;s check our browser:</p>`,6),mn=n("p",null,[n("img",{src:C,alt:"home page light theme with home page navbar link"})],-1),vn=n("p",null,[n("img",{src:P,alt:"home page dark theme with home page navbar link"})],-1),gn=n("h4",{id:"github-repository-link",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#github-repository-link","aria-hidden":"true"},"#"),s(" GitHub repository link")],-1),hn=n("code",null,"config.ts",-1),bn={href:"https://github.com/daggerok/customized-vuepress-2-blog",target:"_blank",rel:"noopener noreferrer"},fn=n("code",null,"daggerok/customized-vuepress-2-blog",-1),yn=n("code",null,"repo",-1),wn=n("code",null,"docsBranch",-1),_n=n("code",null,"docsDir",-1),xn=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme<span class="token punctuation">,</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getPackageJsonFile <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> assert<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> description<span class="token operator">:</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> getPackageJsonFile<span class="token punctuation">.</span>default<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token punctuation">,</span>
    theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        navbar<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> link<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        repo<span class="token operator">:</span> <span class="token string">&#39;daggerok/customized-vuepress-2-blog&#39;</span><span class="token punctuation">,</span>
        docsBranch<span class="token operator">:</span> <span class="token string">&#39;master&#39;</span><span class="token punctuation">,</span>
        docsDir<span class="token operator">:</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now let&#39;s check our browser:</p>`,2),qn=n("p",null,[n("img",{src:I,alt:"home page light theme with github navbar link"})],-1),jn=n("p",null,[n("img",{src:N,alt:"home page dark theme with github navbar link"})],-1),Cn=p(`<h3 id="navbar-search" tabindex="-1"><a class="header-anchor" href="#navbar-search" aria-hidden="true">#</a> Navbar search</h3><p>VuePress has awesome plugin: <code>@vuepress/plugin-search</code>, with that plugin we can quickly add basic search capabilities to our blog. Lets install it:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-ED</span> @vuepress/plugin-search@next
</code></pre></div><p>And configure, as usual in <code>config.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> searchPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/plugin-search&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getPackageJsonFile <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> assert<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> description<span class="token operator">:</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> getPackageJsonFile<span class="token punctuation">.</span>default<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    title<span class="token punctuation">,</span>
    theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        navbar<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> link<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        repo<span class="token operator">:</span> <span class="token string">&#39;daggerok/customized-vuepress-2-blog&#39;</span><span class="token punctuation">,</span>
        docsBranch<span class="token operator">:</span> <span class="token string">&#39;master&#39;</span><span class="token punctuation">,</span>
        docsDir<span class="token operator">:</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token function">searchPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Cool! Now we can check our complete navbar with search functionality in action:</p>`,6),Pn=n("p",null,[n("img",{src:S,alt:"home page light theme with navbar search"})],-1),In=n("p",null,[n("img",{src:z,alt:"home page dark theme with navbar search"})],-1),Nn=n("h2",{id:"deployment",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deployment","aria-hidden":"true"},"#"),s(" Deployment")],-1),Sn=n("p",null,"We've done a lot so far 🤪 It's time to let internet know about it 😁",-1),zn=n("p",null,"To do so:",-1),En=p(`<li>First of all, let&#39;s install required software:<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-ED</span> cross-env
</code></pre></div>We will be using it to run our NPM-scripts with specific environment variable in cases when its needed</li><li>Then let&#39;s add two npm-scripts into <code>pacjage.json</code> file:<div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build .&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build-github-pages&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env BASE_HREF=/customized-vuepress-2-blog/ npm run build&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>Script <code>build</code> will optimize our build for production, script <code>build-github-pages</code> will do same, but with <code>BASE_HREF</code> environment variable will be used in next point:</li><li>Update our <code>.vuepress/config.ts</code> file like so:<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> description<span class="token operator">:</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/package.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    base<span class="token operator">:</span> <span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_HREF</span> <span class="token operator">?</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    title<span class="token punctuation">,</span>
    <span class="token comment">// other part is skipped...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>Here we check if <code>BASE_HREF</code> env. variable wasn&#39;t passed, then we know that base must be <code>/</code>. otherwise it should depends on our repository name, for example: <code>/customized-vuepress-2-blog/</code></li>`,3),Ln={href:"https://github.com/daggerok/customized-vuepress-2-blog",target:"_blank",rel:"noopener noreferrer"},Fn=p('<li>Next go to repository <code>Setting</code> tab, then click <code>Pages</code> manu on sidebar, then under <code>Build and deployment</code> section choose <code>GitHub Actions</code> option: <img src="'+E+`" alt="pages build and deployment configuration using github-actions"></li><li>Last, but not least, create <code>.github/workflows/pages.yml</code> file with next content:<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># Sample workflow for building and deploying a VuePress site to GitHub Pages</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy custom VuePress blog with GitHub Pages artifacts
<span class="token comment"># Runs on pushes targeting the default branch</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;master&quot;</span><span class="token punctuation">]</span>
  <span class="token comment"># Allows you to run this workflow manually from the Actions tab</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>
<span class="token comment"># Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages</span>
<span class="token key atrule">permissions</span><span class="token punctuation">:</span>
  <span class="token key atrule">contents</span><span class="token punctuation">:</span> read
  <span class="token key atrule">pages</span><span class="token punctuation">:</span> write
  <span class="token key atrule">id-token</span><span class="token punctuation">:</span> write
<span class="token comment"># Allow one concurrent deployment</span>
<span class="token key atrule">concurrency</span><span class="token punctuation">:</span>
  <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">&quot;pages&quot;</span>
  <span class="token key atrule">cancel-in-progress</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token comment"># Use concrete NodeJS version:</span>
<span class="token key atrule">env</span><span class="token punctuation">:</span>
  <span class="token key atrule">NODE_VERSION</span><span class="token punctuation">:</span> 18.4.0
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token comment"># Build job:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Pages
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/configure<span class="token punctuation">-</span>pages@v1
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/cache@v3
        <span class="token key atrule">id</span><span class="token punctuation">:</span> ci
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
            ~/.npm
            ~/.node</span>
          <span class="token key atrule">key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> runner.os <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">-</span>$<span class="token punctuation">{</span><span class="token punctuation">{</span> hashFiles(&#39;<span class="token important">**/workflows/*.yml&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;**/package.json&#39;</span><span class="token punctuation">,</span> &#39;<span class="token important">**/package-lock.json&#39;)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> env.NODE_VERSION <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm i <span class="token punctuation">-</span>E
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run build<span class="token punctuation">-</span>github<span class="token punctuation">-</span>pages
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Upload artifact
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/upload<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>artifact@v1
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&#39;.vuepress/dist&#39;</span>
  <span class="token comment"># Deployment job:</span>
  <span class="token key atrule">deploy</span><span class="token punctuation">:</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>pages
      <span class="token key atrule">url</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.deployment.outputs.page_url <span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">needs</span><span class="token punctuation">:</span> build
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to GitHub Pages
        <span class="token key atrule">id</span><span class="token punctuation">:</span> deployment
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/deploy<span class="token punctuation">-</span>pages@v1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>This GitHub action contains two jobs: one for project artifact build + upload and another for its deployment on any master branch push</li>`,2),Dn={href:"https://daggerok.github.io/customized-vuepress-2-blog/",target:"_blank",rel:"noopener noreferrer"},Hn=p(`<h2 id="create-custom-components" tabindex="-1"><a class="header-anchor" href="#create-custom-components" aria-hidden="true">#</a> Create custom components</h2><p>Let&#39;s say we wanna custom <code>Footer</code> which can be easily used in our pages or components, just like so:</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> My post</span>

My content....

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Footer</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create component folder: <code>.vuepress/components/layers</code></p>`,4),Tn=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"mkdir"),s(` .vuepress/components
`)])])],-1),An=n("div",{class:"language-batch","data-ext":"batch"},[n("pre",{class:"language-batch"},[n("code",null,[n("span",{class:"token command"},[n("span",{class:"token keyword"},"mkdir"),s(" .vuepress\\components")]),s(`
`)])])],-1),Un=p(`<p>Create <code>.vuepress/components/Footer.vue</code> component:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Maksim Kostromin © 2022-present 🙃<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Footer&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">div.footer</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span>
  <span class="token property">min-height</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> -3rem<span class="token punctuation">;</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now we should help VuePress to register our components.</p><p>Install <code>@vuepress/plugin-register-components</code> package:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-ED</span> @vuepress/plugin-register-components@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>And finally update our <code>.vuepress/index.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> registerComponentsPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/plugin-register-components&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">registerComponentsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      componentsDir<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./components&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  
  <span class="token comment">// ...skipped after...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now we can used our <code>Footer</code> directly in markdown files or import it in our vue components just like so:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">&#39;@/components/Footer.vue&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="add-custom-local-theme" tabindex="-1"><a class="header-anchor" href="#add-custom-local-theme" aria-hidden="true">#</a> Add custom local theme</h2><p>Let&#39;e imagine we want to have our blog unique, so we&#39;ve decide to add our custom <code>Footer</code> component for every page in our blog... To do so we must create our own custom local theme.</p><p>Let&#39;s create folders <code>.vuepress/theme</code> and <code>.vuepress/theme/layers</code> which will contains custom theme files:</p>`,12),Vn=n("div",{class:"language-bash","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"mkdir"),s(` .vuepress/theme
`),n("span",{class:"token function"},"mkdir"),s(` .vuepress/theme/layers
`)])])],-1),Gn=n("div",{class:"language-batch","data-ext":"batch"},[n("pre",{class:"language-batch"},[n("code",null,[n("span",{class:"token command"},[n("span",{class:"token keyword"},"mkdir"),s(" .vuepress\\theme")]),s(`
`),n("span",{class:"token command"},[n("span",{class:"token keyword"},"mkdir"),s(" .vuepress\\theme\\layers")]),s(`
`)])])],-1),Bn=p(`<p>Create <code>.vuepress/theme/layers/Layout.vue</code> layout:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> ParentLayout <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/theme-default/lib/client/layouts/Layout.vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">&#39;@/components/Footer.vue&#39;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content-wrapping-section<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ParentLayout</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Footer</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create <code>.vuepress/theme/client.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;./layouts/Layout.vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    layouts<span class="token operator">:</span> <span class="token punctuation">{</span>
        Layout<span class="token punctuation">,</span>
        NotFound<span class="token operator">:</span> Layout<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create <code>.vuepress/theme/index.ts</code> file:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">DefaultThemeOptions</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/theme-default&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> myBlogLocalTheme <span class="token operator">=</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> DefaultThemeOptions<span class="token punctuation">)</span><span class="token operator">:</span> Theme <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;vuepress-theme-local&#39;</span><span class="token punctuation">,</span>
      <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">,</span>

      <span class="token comment">// override layouts in child theme&#39;s client config file:</span>
      clientConfigFile<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./client.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

      <span class="token comment">// add component alias. Usage:</span>
      <span class="token comment">// import { MyComponent } from &#39;@/components/MyComponent&#39;;</span>
      <span class="token comment">// it will import component from .vuepress/components/MyComponent.vue file</span>
      alias<span class="token operator">:</span> <span class="token punctuation">{</span>
         <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now update <code>.vuepress/config.ts</code> file accordingly to use it in your VuePress blog:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ...skipped before...</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> myBlogLocalTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./theme&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token function">myBlogLocalTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    navbar<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> link<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    repo<span class="token operator">:</span> <span class="token string">&#39;daggerok/customized-vuepress-2-blog&#39;</span><span class="token punctuation">,</span>
    docsBranch<span class="token operator">:</span> <span class="token string">&#39;master&#39;</span><span class="token punctuation">,</span>
    docsDir<span class="token operator">:</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// ...skipped after...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Jn={href:"https://v2.vuepress.vuejs.org/reference/default-theme/extending.html#layout-slots",target:"_blank",rel:"noopener noreferrer"},On=n("p",null,"Congrats! 🎉💪👏",-1),Mn=n("h2",{id:"useful-links",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#useful-links","aria-hidden":"true"},"#"),s(" Useful links")],-1),Rn={href:"https://github.com/daggerok/customized-vuepress-2-blog",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://v2.vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"};function Wn(k,m,v,r,g,l){const o=u("router-link"),i=u("ExternalLinkIcon"),t=u("CodeGroupItem"),c=u("CodeGroup");return b(),f("div",null,[F,D,n("nav",H,[n("ul",null,[n("li",null,[a(o,{to:"#install-nodejs"},{default:e(()=>[s("Install NodeJS")]),_:1})]),n("li",null,[a(o,{to:"#initialize-project"},{default:e(()=>[s("Initialize project")]),_:1})]),n("li",null,[a(o,{to:"#install-minimal-require-software"},{default:e(()=>[s("Install minimal require software")]),_:1})]),n("li",null,[a(o,{to:"#git-ignore-configuration"},{default:e(()=>[s("Git ignore configuration")]),_:1})]),n("li",null,[a(o,{to:"#add-npm-scripts"},{default:e(()=>[s("Add NPM scripts")]),_:1})]),n("li",null,[a(o,{to:"#static-resources"},{default:e(()=>[s("Static resources")]),_:1})]),n("li",null,[a(o,{to:"#site-content"},{default:e(()=>[s("Site content")]),_:1})]),n("li",null,[a(o,{to:"#run-dev-server-to-test"},{default:e(()=>[s("Run dev server to test")]),_:1})]),n("li",null,[a(o,{to:"#custom-styling"},{default:e(()=>[s("Custom styling")]),_:1})]),n("li",null,[a(o,{to:"#customize-navbar"},{default:e(()=>[s("Customize navbar")]),_:1}),n("ul",null,[n("li",null,[a(o,{to:"#navbar-title"},{default:e(()=>[s("Navbar title")]),_:1})]),n("li",null,[a(o,{to:"#navbar-links"},{default:e(()=>[s("Navbar links")]),_:1})]),n("li",null,[a(o,{to:"#navbar-search"},{default:e(()=>[s("Navbar search")]),_:1})])])]),n("li",null,[a(o,{to:"#deployment"},{default:e(()=>[s("Deployment")]),_:1})]),n("li",null,[a(o,{to:"#create-custom-components"},{default:e(()=>[s("Create custom components")]),_:1})]),n("li",null,[a(o,{to:"#add-custom-local-theme"},{default:e(()=>[s("Add custom local theme")]),_:1})]),n("li",null,[a(o,{to:"#useful-links"},{default:e(()=>[s("Useful links")]),_:1})])])]),T,n("p",null,[s("VuePress required NodeJS to be installed. Please check "),n("a",A,[s("download page"),a(i)]),s(" to see how to install it on your operating system.")]),U,a(c,null,{default:e(()=>[a(t,{title:"macOS Homebrew",active:""},{default:e(()=>[V]),_:1}),a(t,{title:"Windows scoop"},{default:e(()=>[G]),_:1})]),_:1}),d(" See: https://v2.vuepress.vuejs.org/reference/default-theme/components.html#codegroupitem "),n("div",B,[J,n("p",null,[s("See more options "),n("a",O,[s("here"),a(i)])])]),M,R,a(c,null,{default:e(()=>[a(t,{title:"Unix bash",active:""},{default:e(()=>[$]),_:1}),a(t,{title:"Windows batch"},{default:e(()=>[W]),_:1})]),_:1}),K,d(`

\`\`\`bash
npm i -ED vuepress@next vuepress-plugin-use-pages @vuepress/plugin-register-components @vuepress/plugin-search @vuepress/theme-default
npm i -ED cross-env glob @types/npm rimraf
\`\`\`

`),Q,n("p",null,[s("Last missing peace we left to do is write our blog home page in user friendly "),n("a",X,[s("markdown"),a(i)]),s(" format (file with "),Y,s(" extensions). This will help us focus on a writing only and VuePress will take care of everything else: styles, positioning, fonts, highlighting, etc...")]),Z,n("p",null,[s("I won't be explaining in details what this configuration is doing, in most cases it should be obvious... But anyway, you can "),n("a",nn,[s("go and read official documentation here"),a(i)]),s(" if needed")]),sn,n("p",null,[s("Open "),n("a",an,[s("http://localhost:8080/"),a(i)]),s(" page to see results:")]),a(c,null,{default:e(()=>[a(t,{title:"light theme",active:""},{default:e(()=>[en]),_:1}),a(t,{title:"dark theme"},{default:e(()=>[tn]),_:1})]),_:1}),on,n("p",null,[s("Let's check our browser on "),n("a",pn,[s("http://localhost:8080/"),a(i)]),s(":")]),a(c,null,{default:e(()=>[a(t,{title:"light theme",active:""},{default:e(()=>[ln]),_:1}),a(t,{title:"dark theme"},{default:e(()=>[cn]),_:1})]),_:1}),un,a(c,null,{default:e(()=>[a(t,{title:"light theme",active:""},{default:e(()=>[rn]),_:1}),a(t,{title:"dark theme"},{default:e(()=>[dn]),_:1})]),_:1}),kn,a(c,null,{default:e(()=>[a(t,{title:"light theme",active:""},{default:e(()=>[mn]),_:1}),a(t,{title:"dark theme"},{default:e(()=>[vn]),_:1})]),_:1}),gn,n("p",null,[s("Additionally, we may want to share GitHub or GitLab repository where our blog source codes live. Even for ourselves it would be easier simply just click to GitHub link and quickly edit post if we would like to change something or fix some misspell... In "),hn,s(" file we should tell VuePress our GitHub username and repository name. My repository FQDN URL in this case is "),n("a",bn,[s("https://github.com/daggerok/customized-vuepress-2-blog"),a(i)]),s(", so I should use "),fn,s(" part of it as "),yn,s(" value. It is enough to have GitHub navbar link, but I would like also specify "),wn,s(" and "),_n,s(" values:")]),xn,a(c,null,{default:e(()=>[a(t,{title:"light theme",active:""},{default:e(()=>[qn]),_:1}),a(t,{title:"dark theme"},{default:e(()=>[jn]),_:1})]),_:1}),Cn,a(c,null,{default:e(()=>[a(t,{title:"light theme",active:""},{default:e(()=>[Pn]),_:1}),a(t,{title:"dark theme"},{default:e(()=>[In]),_:1})]),_:1}),Nn,Sn,zn,n("ol",null,[En,n("li",null,[s("Create GitHub repository if its not yet created, commit what we did so far and push all your blog source codes in here. For example into "),n("a",Ln,[s("https://github.com/daggerok/customized-vuepress-2-blog"),a(i)]),s(" repository")]),Fn,n("li",null,[s("Commit and push changes from previous step and wait for CI completion. Afterall, you should see your awesome customized VuePress blog gets published, for example here: "),n("a",Dn,[s("https://daggerok.github.io/customized-vuepress-2-blog/"),a(i)])])]),Hn,a(c,null,{default:e(()=>[a(t,{title:"Unix bash",active:""},{default:e(()=>[Tn]),_:1}),a(t,{title:"Windows batch"},{default:e(()=>[An]),_:1})]),_:1}),Un,a(c,null,{default:e(()=>[a(t,{title:"Unix bash",active:""},{default:e(()=>[Vn]),_:1}),a(t,{title:"Windows batch"},{default:e(()=>[Gn]),_:1})]),_:1}),Bn,n("p",null,[s("See: "),n("a",Jn,[s("Official extending section"),a(i)]),s(" for more details")]),On,d(`

## TODO

* Next post: Add more blog posts, use globs to autoconfigure blog sidebar and page plugin
* Next post: Use page plugin to create custom reusable blog posts component to be used on home and blog pages
* Next post: [Add multi-language support](https://v2.vuepress.vuejs.org/guide/i18n.html)

`),Mn,n("ul",null,[n("li",null,[n("a",Rn,[s("GitHub repository"),a(i)])]),n("li",null,[n("a",$n,[s("VuePress 2.x site"),a(i)])])])])}const Qn=h(L,[["render",Wn],["__file","index.html.vue"]]);export{Qn as default};
